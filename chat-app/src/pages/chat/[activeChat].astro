---
import WCAGChatPage from "@/components/chat-ui/WCAGChatPage";
import AuthedChatLayout from "@/layouts/AuthedChatLayout.astro";
import { supabaseServerClient } from "@/lib/supabase";
import { actions } from "astro:actions";

const supabaseBE = supabaseServerClient({
	request: Astro.request,
	cookies: Astro.cookies,
});

const {
	data: { user },
} = await supabaseBE.auth.getUser();

const activeUser = user;
const { activeChatId } = Astro.params;

if (!activeChatId) {
	Astro.redirect("/chat");
}

const { data: chatMessages, error: chatMessagesError } = await Astro.callAction(
	actions.readChatMsgs,
	{ activeChatId: activeChatId as string }
);

const chatMsgs = chatMessages?.message || [];

const messages = chatMsgs.map((msg) => ({
	id: msg.id,
	role: msg.role,
	parts: [{ type: "text", text: msg.message_content }],
	createdAt: new Date(msg.created_at),
}));
---

<AuthedChatLayout>
	<WCAGChatPage
		client:load
		user={activeUser}
		initialMessages={messages}
		activeChatId={activeChatId}
	/>
</AuthedChatLayout>
